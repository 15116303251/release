package com.king.dubbo.animal.dao.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AnimalSeeRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public AnimalSeeRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCauseIsNull() {
            addCriterion("cause is null");
            return (Criteria) this;
        }

        public Criteria andCauseIsNotNull() {
            addCriterion("cause is not null");
            return (Criteria) this;
        }

        public Criteria andCauseEqualTo(String value) {
            addCriterion("cause =", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseNotEqualTo(String value) {
            addCriterion("cause <>", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseGreaterThan(String value) {
            addCriterion("cause >", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseGreaterThanOrEqualTo(String value) {
            addCriterion("cause >=", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseLessThan(String value) {
            addCriterion("cause <", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseLessThanOrEqualTo(String value) {
            addCriterion("cause <=", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseLike(String value) {
            addCriterion("cause like", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseNotLike(String value) {
            addCriterion("cause not like", value, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseIn(List<String> values) {
            addCriterion("cause in", values, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseNotIn(List<String> values) {
            addCriterion("cause not in", values, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseBetween(String value1, String value2) {
            addCriterion("cause between", value1, value2, "cause");
            return (Criteria) this;
        }

        public Criteria andCauseNotBetween(String value1, String value2) {
            addCriterion("cause not between", value1, value2, "cause");
            return (Criteria) this;
        }

        public Criteria andHospitalIsNull() {
            addCriterion("hospital is null");
            return (Criteria) this;
        }

        public Criteria andHospitalIsNotNull() {
            addCriterion("hospital is not null");
            return (Criteria) this;
        }

        public Criteria andHospitalEqualTo(String value) {
            addCriterion("hospital =", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalNotEqualTo(String value) {
            addCriterion("hospital <>", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalGreaterThan(String value) {
            addCriterion("hospital >", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalGreaterThanOrEqualTo(String value) {
            addCriterion("hospital >=", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalLessThan(String value) {
            addCriterion("hospital <", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalLessThanOrEqualTo(String value) {
            addCriterion("hospital <=", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalLike(String value) {
            addCriterion("hospital like", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalNotLike(String value) {
            addCriterion("hospital not like", value, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalIn(List<String> values) {
            addCriterion("hospital in", values, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalNotIn(List<String> values) {
            addCriterion("hospital not in", values, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalBetween(String value1, String value2) {
            addCriterion("hospital between", value1, value2, "hospital");
            return (Criteria) this;
        }

        public Criteria andHospitalNotBetween(String value1, String value2) {
            addCriterion("hospital not between", value1, value2, "hospital");
            return (Criteria) this;
        }

        public Criteria andSeeTimeIsNull() {
            addCriterion("see_time is null");
            return (Criteria) this;
        }

        public Criteria andSeeTimeIsNotNull() {
            addCriterion("see_time is not null");
            return (Criteria) this;
        }

        public Criteria andSeeTimeEqualTo(Date value) {
            addCriterion("see_time =", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeNotEqualTo(Date value) {
            addCriterion("see_time <>", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeGreaterThan(Date value) {
            addCriterion("see_time >", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("see_time >=", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeLessThan(Date value) {
            addCriterion("see_time <", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeLessThanOrEqualTo(Date value) {
            addCriterion("see_time <=", value, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeIn(List<Date> values) {
            addCriterion("see_time in", values, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeNotIn(List<Date> values) {
            addCriterion("see_time not in", values, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeBetween(Date value1, Date value2) {
            addCriterion("see_time between", value1, value2, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeTimeNotBetween(Date value1, Date value2) {
            addCriterion("see_time not between", value1, value2, "seeTime");
            return (Criteria) this;
        }

        public Criteria andSeeStatusIsNull() {
            addCriterion("see_status is null");
            return (Criteria) this;
        }

        public Criteria andSeeStatusIsNotNull() {
            addCriterion("see_status is not null");
            return (Criteria) this;
        }

        public Criteria andSeeStatusEqualTo(Integer value) {
            addCriterion("see_status =", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusNotEqualTo(Integer value) {
            addCriterion("see_status <>", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusGreaterThan(Integer value) {
            addCriterion("see_status >", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("see_status >=", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusLessThan(Integer value) {
            addCriterion("see_status <", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusLessThanOrEqualTo(Integer value) {
            addCriterion("see_status <=", value, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusIn(List<Integer> values) {
            addCriterion("see_status in", values, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusNotIn(List<Integer> values) {
            addCriterion("see_status not in", values, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusBetween(Integer value1, Integer value2) {
            addCriterion("see_status between", value1, value2, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andSeeStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("see_status not between", value1, value2, "seeStatus");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andAnimalIdIsNull() {
            addCriterion("animal_id is null");
            return (Criteria) this;
        }

        public Criteria andAnimalIdIsNotNull() {
            addCriterion("animal_id is not null");
            return (Criteria) this;
        }

        public Criteria andAnimalIdEqualTo(Integer value) {
            addCriterion("animal_id =", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdNotEqualTo(Integer value) {
            addCriterion("animal_id <>", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdGreaterThan(Integer value) {
            addCriterion("animal_id >", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("animal_id >=", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdLessThan(Integer value) {
            addCriterion("animal_id <", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdLessThanOrEqualTo(Integer value) {
            addCriterion("animal_id <=", value, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdIn(List<Integer> values) {
            addCriterion("animal_id in", values, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdNotIn(List<Integer> values) {
            addCriterion("animal_id not in", values, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdBetween(Integer value1, Integer value2) {
            addCriterion("animal_id between", value1, value2, "animalId");
            return (Criteria) this;
        }

        public Criteria andAnimalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("animal_id not between", value1, value2, "animalId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table see_record
     *
     * @mbg.generated do_not_delete_during_merge Tue Jun 18 23:38:54 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table see_record
     *
     * @mbg.generated Tue Jun 18 23:38:54 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}